Parameters:
  InstanceTypeParameter: 
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
    Description: instance type
  KeyName:
    Description: Name of EC2 login key
    Type: AWS::EC2::KeyPair::KeyName
    Default: jenkins-key
Mappings:
  AmiRegionMap:
    us-east-1:
      AMI: "ami-006dcf34c09e50022"
    us-east-2:
      AMI: "ami-0f3c9c466bb525749"
    eu-west-1:
      AMI: "ami-060d3509162bcc386"
Resources:
  WebServer:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              php: []
              httpd: []
              wget: []
              unzip: []
              git: []
          commands:
            tests:
              command: "wget https://www.tooplate.com/zip-templates/2119_gymso_fitness.zip && unzip 2119_gymso_fitness.zip && cp -r 2119_gymso_fitness/* /var/www/html/"
          files:
            /var/www/html/hello.html:
              content: !Sub |
                <!DOCTYPE html>
                <html>
                <body>

                <h1>Welcome to CloudFormation. </h1>
                <p>This site is deployed by CloudFormation. </p>

                </body>
                </html>
          services:
              sysvinit:
                httpd:
                  enabled: true
                  ensureRunning: true
    Properties:
      ImageId: !FindInMap 
        - AmiRegionMap
        - !Ref AWS::Region
        - AMI
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref KeyName
      Tags:
        - Value: !Join ["-",[my, inst, in, !Ref AWS::Region]]
          Key: "Name"
      SecurityGroups:
        - !Ref VprofileSG
      UserData: 
        'Fn::Base64':
          !Sub |
          yum install -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource WebServer --region ${AWS::Region}
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WebServer --region ${AWS::Region}
  VprofileSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh to myip
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
Outputs:
  PrintSomeInfo:
    Value: !GetAtt 
      - WebServer
      - PublicDnsName